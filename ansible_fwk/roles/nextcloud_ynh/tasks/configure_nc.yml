---

# - set_vars:
#     exec_occ: |
#       cd {{ webroot }}
#       sudo -u {{ app.user }} \
#       {{ app.phpversion }} occ \
#       --no-interaction --no-ansi

# - name: "Ensure that UpdateNotification is disabled"
#   shell: "{{ exec_occ }} app:disable updatenotification"

# ------------------------------------

# - block:
#   become: yes
#   become_user: "{{ app.user }}"
#   tags: install_app

#   - name: "Ensure that UpdateNotification is disabled"
#     shell: php occ app:disable updatenotification
#     args: chdir={{ webroot }}

#   - name: "Ensure that UpdateNotification is disabled"
#     shell: php occ app:enable user_ldap
#     args: chdir={{ webroot }}

#   - name: "Ensure that UpdateNotification is disabled"
#     shell: php occ ldap:create-empty-config"
#     args: chdir={{ webroot }}
    
    


- block:

  - name: "setup nextcloud installation config file"
    template:
      src: "templates/{{ item }}.j2"
      dest: "{{ webroot }}/{{ item }}"
      owner: "{{ app.user }}"
      mode: 0644
    notify: remove nextcloud json configs
    tags: install_app

  - name: "import nextcloud json configs"
    become: yes
    become_user: "{{ app.instance }}"
    shell: 'php occ config:import "{{ webroot }}/{{ item }}"'
    args:
      chdir: "{{ webroot }}"
    tags: install_app

  loop:
    - nc_base_config.json
    - nc_additional_config.json

- name: "test nextcloud ldap config"
  become: yes
  become_user: "{{ app.instance }}"
  command: "php occ ldap:test-config ''"
  args:
    chdir: "{{ webroot }}"
  tags: install_app

- block:
  become: yes
  become_user: "{{ app.instance }}"

  - name: "enable external storage"
    command: "php occ app:enable files_external"
    args:
      chdir: "{{ webroot }}"
    tags: install_app

  - name: "configure storage mount"
    become: yes
    become_user: "{{ app.instance }}"
    command: php occ files_external:create --output=json "Home" 'local' 'null::null' -c "datadir={{ datadir }}"
    args:
      chdir: "{{ webroot }}"
    register: mount_config
    tags: install_app

  - name: "Enable storage mount sharing"
    become: yes
    become_user: "{{ app.instance }}"
    command: php occ files_external:option "{{ mount_config.stdout }}" enable_sharing true
    args:
      chdir: "{{ webroot }}"
    register: mount_config
    tags: install_app

  when: app.use_user_home_dirs

- name: "Config nextcloud logout URL for yunohost sso"
  blockinfile:
    path: /etc/network/interfaces
    block: |
      //-YunoHost-
      // set logout_url according to main domain
      $CONFIG['logout_url'] = 'https://{{ main_domain }}/yunohost/sso/?action=logout';
      //-YunoHost-
  tags: install_app

- name: "Ensure {{ app.instance }} admin is {{ app.admin }}"
  mysql_query:
    name: "{{ app.instance }}"
    table: oc_group_user
    login_host: localhost
    login_user: "{{ app.instance }}"
    login_password: "{{ lookup('password', '/tmp/' + app.instance + '_passwd chars=ascii_letters') }}"
    identifiers:
      gid: admin
    values:
      uid: "{{ app.admin }}"
  tags: install_app

- name: "Enable storage mount sharing"
  become: yes
  become_user: "{{ app.instance }}"
  command: php occ user:delete admin
  args:
    chdir: "{{ webroot }}"
  register: mount_config
  tags: install_app and app.use_user_home_dirs

  # TODO store checksum in app settings

- name: "Setup {{ app.instance }} cronjob"
  cron:
    name: "check dirs"
    minute: "15"
    job: "/usr/bin/php -f {{ webroot }}/cron.php"
    user:  "{{ app.instance }}"
    cron_file: "{{ app.instance }}.cron"

- name: "Enable storage mount sharing"
  become: yes
  become_user: "{{ app.instance }}"
  command: php occ background:cron
  args:
    chdir: "{{ webroot }}"
  tags: install_app

- name: "Set file ACL for {{ app.instance }} access"
  acl:
    path: "/home/{{ app.instance }}"
    entity: "{{ app.instance }}"
    etype: group
    permissions: rwx
    recursive: yes
    default: yes
    state: present
  tags: install_app and app.use_user_home_dirs
